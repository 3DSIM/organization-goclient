// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/organization-goclient/models"
)

// GetSubscriptionsReader is a Reader for the GetSubscriptions structure.
type GetSubscriptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubscriptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSubscriptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetSubscriptionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSubscriptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetSubscriptionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSubscriptionsOK creates a GetSubscriptionsOK with default headers values
func NewGetSubscriptionsOK() *GetSubscriptionsOK {
	return &GetSubscriptionsOK{}
}

/*GetSubscriptionsOK handles this case with default header values.

Successfully returned the list of items
*/
type GetSubscriptionsOK struct {
	Payload []*models.Subscription
}

func (o *GetSubscriptionsOK) Error() string {
	return fmt.Sprintf("[GET /subscriptions][%d] getSubscriptionsOK  %+v", 200, o.Payload)
}

func (o *GetSubscriptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubscriptionsUnauthorized creates a GetSubscriptionsUnauthorized with default headers values
func NewGetSubscriptionsUnauthorized() *GetSubscriptionsUnauthorized {
	return &GetSubscriptionsUnauthorized{}
}

/*GetSubscriptionsUnauthorized handles this case with default header values.

Not authorized
*/
type GetSubscriptionsUnauthorized struct {
}

func (o *GetSubscriptionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /subscriptions][%d] getSubscriptionsUnauthorized ", 401)
}

func (o *GetSubscriptionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSubscriptionsForbidden creates a GetSubscriptionsForbidden with default headers values
func NewGetSubscriptionsForbidden() *GetSubscriptionsForbidden {
	return &GetSubscriptionsForbidden{}
}

/*GetSubscriptionsForbidden handles this case with default header values.

Forbidden
*/
type GetSubscriptionsForbidden struct {
}

func (o *GetSubscriptionsForbidden) Error() string {
	return fmt.Sprintf("[GET /subscriptions][%d] getSubscriptionsForbidden ", 403)
}

func (o *GetSubscriptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSubscriptionsDefault creates a GetSubscriptionsDefault with default headers values
func NewGetSubscriptionsDefault(code int) *GetSubscriptionsDefault {
	return &GetSubscriptionsDefault{
		_statusCode: code,
	}
}

/*GetSubscriptionsDefault handles this case with default header values.

unexpected error
*/
type GetSubscriptionsDefault struct {
	_statusCode int
}

// Code gets the status code for the get subscriptions default response
func (o *GetSubscriptionsDefault) Code() int {
	return o._statusCode
}

func (o *GetSubscriptionsDefault) Error() string {
	return fmt.Sprintf("[GET /subscriptions][%d] getSubscriptions default ", o._statusCode)
}

func (o *GetSubscriptionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/organization-goclient/models"
)

// PutSubscriptionReader is a Reader for the PutSubscription structure.
type PutSubscriptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSubscriptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutSubscriptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutSubscriptionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutSubscriptionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutSubscriptionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutSubscriptionOK creates a PutSubscriptionOK with default headers values
func NewPutSubscriptionOK() *PutSubscriptionOK {
	return &PutSubscriptionOK{}
}

/*PutSubscriptionOK handles this case with default header values.

Successfully returned the list of items
*/
type PutSubscriptionOK struct {
	Payload *models.Subscription
}

func (o *PutSubscriptionOK) Error() string {
	return fmt.Sprintf("[PUT /organizations/{orgId}/subscriptions/{subId}][%d] putSubscriptionOK  %+v", 200, o.Payload)
}

func (o *PutSubscriptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Subscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSubscriptionUnauthorized creates a PutSubscriptionUnauthorized with default headers values
func NewPutSubscriptionUnauthorized() *PutSubscriptionUnauthorized {
	return &PutSubscriptionUnauthorized{}
}

/*PutSubscriptionUnauthorized handles this case with default header values.

Not authorized
*/
type PutSubscriptionUnauthorized struct {
}

func (o *PutSubscriptionUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /organizations/{orgId}/subscriptions/{subId}][%d] putSubscriptionUnauthorized ", 401)
}

func (o *PutSubscriptionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSubscriptionForbidden creates a PutSubscriptionForbidden with default headers values
func NewPutSubscriptionForbidden() *PutSubscriptionForbidden {
	return &PutSubscriptionForbidden{}
}

/*PutSubscriptionForbidden handles this case with default header values.

Forbidden
*/
type PutSubscriptionForbidden struct {
}

func (o *PutSubscriptionForbidden) Error() string {
	return fmt.Sprintf("[PUT /organizations/{orgId}/subscriptions/{subId}][%d] putSubscriptionForbidden ", 403)
}

func (o *PutSubscriptionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSubscriptionDefault creates a PutSubscriptionDefault with default headers values
func NewPutSubscriptionDefault(code int) *PutSubscriptionDefault {
	return &PutSubscriptionDefault{
		_statusCode: code,
	}
}

/*PutSubscriptionDefault handles this case with default header values.

unexpected error
*/
type PutSubscriptionDefault struct {
	_statusCode int
}

// Code gets the status code for the put subscription default response
func (o *PutSubscriptionDefault) Code() int {
	return o._statusCode
}

func (o *PutSubscriptionDefault) Error() string {
	return fmt.Sprintf("[PUT /organizations/{orgId}/subscriptions/{subId}][%d] putSubscription default ", o._statusCode)
}

func (o *PutSubscriptionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/organization-goclient/models"
)

// NewPostOrganizationsIDUsersParams creates a new PostOrganizationsIDUsersParams object
// with the default values initialized.
func NewPostOrganizationsIDUsersParams() *PostOrganizationsIDUsersParams {
	var ()
	return &PostOrganizationsIDUsersParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostOrganizationsIDUsersParamsWithTimeout creates a new PostOrganizationsIDUsersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostOrganizationsIDUsersParamsWithTimeout(timeout time.Duration) *PostOrganizationsIDUsersParams {
	var ()
	return &PostOrganizationsIDUsersParams{

		timeout: timeout,
	}
}

// NewPostOrganizationsIDUsersParamsWithContext creates a new PostOrganizationsIDUsersParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostOrganizationsIDUsersParamsWithContext(ctx context.Context) *PostOrganizationsIDUsersParams {
	var ()
	return &PostOrganizationsIDUsersParams{

		Context: ctx,
	}
}

/*PostOrganizationsIDUsersParams contains all the parameters to send to the API endpoint
for the post organizations ID users operation typically these are written to a http.Request
*/
type PostOrganizationsIDUsersParams struct {

	/*ID
	  ID of organization to create user in

	*/
	ID int64
	/*User*/
	User *models.UserPost

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post organizations ID users params
func (o *PostOrganizationsIDUsersParams) WithTimeout(timeout time.Duration) *PostOrganizationsIDUsersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post organizations ID users params
func (o *PostOrganizationsIDUsersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post organizations ID users params
func (o *PostOrganizationsIDUsersParams) WithContext(ctx context.Context) *PostOrganizationsIDUsersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post organizations ID users params
func (o *PostOrganizationsIDUsersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithID adds the id to the post organizations ID users params
func (o *PostOrganizationsIDUsersParams) WithID(id int64) *PostOrganizationsIDUsersParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the post organizations ID users params
func (o *PostOrganizationsIDUsersParams) SetID(id int64) {
	o.ID = id
}

// WithUser adds the user to the post organizations ID users params
func (o *PostOrganizationsIDUsersParams) WithUser(user *models.UserPost) *PostOrganizationsIDUsersParams {
	o.SetUser(user)
	return o
}

// SetUser adds the user to the post organizations ID users params
func (o *PostOrganizationsIDUsersParams) SetUser(user *models.UserPost) {
	o.User = user
}

// WriteToRequest writes these params to a swagger request
func (o *PostOrganizationsIDUsersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if o.User == nil {
		o.User = new(models.UserPost)
	}

	if err := r.SetBodyParam(o.User); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/3dsim/organization-goclient/models"
)

// GetImpersonateURLForUserReader is a Reader for the GetImpersonateURLForUser structure.
type GetImpersonateURLForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetImpersonateURLForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetImpersonateURLForUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetImpersonateURLForUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetImpersonateURLForUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetImpersonateURLForUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetImpersonateURLForUserOK creates a GetImpersonateURLForUserOK with default headers values
func NewGetImpersonateURLForUserOK() *GetImpersonateURLForUserOK {
	return &GetImpersonateURLForUserOK{}
}

/*GetImpersonateURLForUserOK handles this case with default header values.

Successfully returned the impersonate url
*/
type GetImpersonateURLForUserOK struct {
	Payload *models.ImpersonateURL
}

func (o *GetImpersonateURLForUserOK) Error() string {
	return fmt.Sprintf("[GET /users/{id}/impersonateurl][%d] getImpersonateUrlForUserOK  %+v", 200, o.Payload)
}

func (o *GetImpersonateURLForUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImpersonateURL)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImpersonateURLForUserUnauthorized creates a GetImpersonateURLForUserUnauthorized with default headers values
func NewGetImpersonateURLForUserUnauthorized() *GetImpersonateURLForUserUnauthorized {
	return &GetImpersonateURLForUserUnauthorized{}
}

/*GetImpersonateURLForUserUnauthorized handles this case with default header values.

Not authorized
*/
type GetImpersonateURLForUserUnauthorized struct {
	Payload *models.Error
}

func (o *GetImpersonateURLForUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{id}/impersonateurl][%d] getImpersonateUrlForUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetImpersonateURLForUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImpersonateURLForUserForbidden creates a GetImpersonateURLForUserForbidden with default headers values
func NewGetImpersonateURLForUserForbidden() *GetImpersonateURLForUserForbidden {
	return &GetImpersonateURLForUserForbidden{}
}

/*GetImpersonateURLForUserForbidden handles this case with default header values.

Forbidden
*/
type GetImpersonateURLForUserForbidden struct {
	Payload *models.Error
}

func (o *GetImpersonateURLForUserForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{id}/impersonateurl][%d] getImpersonateUrlForUserForbidden  %+v", 403, o.Payload)
}

func (o *GetImpersonateURLForUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImpersonateURLForUserDefault creates a GetImpersonateURLForUserDefault with default headers values
func NewGetImpersonateURLForUserDefault(code int) *GetImpersonateURLForUserDefault {
	return &GetImpersonateURLForUserDefault{
		_statusCode: code,
	}
}

/*GetImpersonateURLForUserDefault handles this case with default header values.

unexpected error
*/
type GetImpersonateURLForUserDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get impersonate URL for user default response
func (o *GetImpersonateURLForUserDefault) Code() int {
	return o._statusCode
}

func (o *GetImpersonateURLForUserDefault) Error() string {
	return fmt.Sprintf("[GET /users/{id}/impersonateurl][%d] getImpersonateURLForUser default  %+v", o._statusCode, o.Payload)
}

func (o *GetImpersonateURLForUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
